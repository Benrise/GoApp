@function rem($value, $current: 16) {
	$remValue: ($value / $current) + rem;
	@return $remValue;
}

@function em($px, $current: 16) {
	$result: ($px / $current) + em;
	@return $result;
}

@mixin sliderSetup() {
	.slider-button::after {
		display: none;
	}
	.slider-button {
		width: fit-content;
		height: fit-content;
	}

	.swiper-button-prev {
		transform: rotate(180deg);
		left: var(--swiper-navigation-sides-offset, rem(-25));
	}
	.swiper-button-next {
		right: var(--swiper-navigation-sides-offset, rem(-25));
	}
	.swiper-pagination-bullets.swiper-pagination-horizontal {
		bottom: var(--swiper-pagination-bottom, -25px);
	}
	.swiper-pagination-bullet-active {
		background-color: $funcButton_color;
	}
	.swiper-pagination-bullet {
		background-color: $funcButton_color;
	}
}

// Адаптивное свойство (clamp)
@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
	// Для calc();
	$addSize: ($startSize - $minSize);
	@if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
		$widthFrom: $maxWidth;
	}
	@if ($minSize <= 0) {
		$minSize: 0.0001;
	}
	@if ($startSize <= 0) {
		$startSize: 0.0001;
	}

	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: ($startSize - $minSize) / ($widthFrom - $widthTo);
	$yIntersection: -$widthTo * $slope + $minSize;
	$flyValue: #{rem($yIntersection)}" + " #{($slope * 100)}vw;

	// Получение значения свойства
	$propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};
	// Если отрицательные значения
	@if ($minSize > $startSize) {
		$propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
	}

	@if $widthFrom == $containerWidth or $widthFrom == $maxWidth or $keepSize == 1 or $keepSize == 2 {
		@media (min-width: $widthFromMedia) {
			#{$property}: rem($startSize);
		}
	}
	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		// Если поддерживается clamp();
		@supports (#{$property}: $propertyValue) {
			#{$property}: $propertyValue;
		}
		// Если не поддерживается clamp();
		@supports not (#{$property}: $propertyValue) {
			#{$property}: calc(
				#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{(($widthFrom / 16) - ($widthTo / 16))}
			);
		}
	}
	@if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {
		@media (max-width: $widthToMedia) {
			#{$property}: rem($minSize);
		}
	}
}
